{"version":3,"sources":["homeImage.png","resourcesImage.png","settings.js","state-manager/reducer.js","state-manager/globalState.js","utils/components/Image.js","components/main/Home.js","utils/utils.js","components/main/countryCard.js","components/main/Predictions.js","components/main/CountryPredictions.js","components/main/About.js","components/main/Resources.js","components/Main.js","components/Aside.js","App.js","index.js"],"names":["module","exports","API_URLS","countries","country_predictions","appReducer","state","payload","type","predictions","is_offline","initialState","data","has_error","deaths","cases","recovered","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","providerValue","fetchCountries","Promise","resolve","reject","axios","get","then","response","catch","err","setCountries","fetchPredictions","id","setPredictions","getCountry","filter","country","setOffline","bool","Provider","value","Image","loaded","error","this","setState","console","log","className","style","height","width","Loading","opacity","src","props","onLoad","handleLoad","onError","handleError","Component","Home","to","homeImage","formatNumber","number","beforeComma","Math","trunc","afterComma","formatNumberToMonth","countryCard","image","continent","name","population","Predictions","useContext","length","map","key","CountryPredictions","ctxLine","useRef","ctxPie","useState","isLoading","setIsLoading","setCountry","month","table","setTable","useParams","useEffect","Number","i","push","y","getTable","scatterDataSet","primaryColor","label","borderColor","color","pointBorderColor","pointBackgroundColor","fill","showLine","backgroundColor","Chart","current","datasets","options","elements","point","radius","legend","labels","fontColor","fontSize","responsive","scales","xAxes","gridLines","zeroLineColor","ticks","autoSkip","stepSize","min","max","padding","fontStyle","callback","yAxes","beginAtZero","toLocaleString","cutoutPercentage","ref","About","target","href","Resources","resourceImage","Main","window","addEventListener","exact","path","component","Aside","displayMenu","setDisplayMenu","onClick","activeClassName","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.411e7aa7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/homeImage.87ae5d21.png\";","module.exports = __webpack_public_path__ + \"static/media/resourcesImage.9535de54.png\";","\n\nexport const WEB_API_HOST = 'http://localhost:8000/api';\n\nexport const API_URLS = {\n\tcountries: `${WEB_API_HOST}/countries`, // no params\n\tcountry_predictions: `${WEB_API_HOST}/country/predictions`,  // id \n}","\n\nfunction appReducer( state, { payload, type } ){\n\n\n\tswitch( type){\n\n\t\tcase 'SET_COUNTRIES':\n\t\t\treturn { ...state, countries: payload.countries };\n\n\t\tcase 'SET_PREDICTIONS':\n\t\t\treturn { ...state, predictions: payload.predictions };\n\n\t\tcase 'SET_OFFILINE':\n\t\t\treturn { ...state, is_offline: payload.is_offline };\n\t\t\t\n\t\tdefault : return state;\n\t}\n}\n\nexport default appReducer;","import React, { createContext, useReducer } from 'react';\nimport axios from 'axios';\n\n\nimport { API_URLS } from './../settings';\n\n\nimport appReducer from './reducer.js';\n\n\nconst initialState = {\n\tis_offline: false,\n\tcountries: {\n\t\tdata: [],\n\t\thas_error: false\n\t},\n\tpredictions: {\n\t\t/* predictions are an array of an object ( {x: int, y: int} ) \n\t\t   to draw the line graph \n\t\t*/\n\t\tdeaths: [],\n\t\tcases: [],\n\t\trecovered: [],\n\t\thas_error: false\n\t}\n}\n\n// Create context sub component\nexport const GlobalContext =  createContext( initialState );\n\n// Create provider component\n\nexport function GlobalProvider( { children } ){\n\n\tconst [ state, dispatch ] = useReducer( appReducer, initialState );\n\n\tfunction fetchCountries(){\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\t\t\tconst countries = { data: [], has_error: false };\n\t\t\taxios.get( API_URLS.countries )\n\t\t\t.then(( response )=>{\n\t\t\t\tcountries.data = response.data.countries;\n\t\t\t\tresolve( countries );\n\t\t\t})\n\t\t\t.catch((err)=>{\n\t\t\t\tcountries.has_error = true;\n\t\t\t\treject( { err, countries } );\n\t\t\t})\n\n\t\t})\n\t}\n\n\tfunction setCountries(countries){\n\t\tdispatch({\n\t\t\ttype : 'SET_COUNTRIES',\n\t\t\tpayload: { countries, }\n\t\t})\n\t}\n\n\tfunction fetchPredictions(id){\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\t\t\tconst predictions = { deaths:[], cases:[], recovered:[], has_error: false };\n\n\t\t\taxios.get( `${API_URLS.country_predictions}/${id}` )\n\n\t\t\t.then(( response )=>{\n\t\t\t\tconst { deaths, cases, recovered } = response.data.predictions;\n\t\t\t\tpredictions.deaths =  deaths;\n\t\t\t\tpredictions.cases =  cases;\n\t\t\t\tpredictions.recovered =  recovered;\n\t\t\t\tresolve( predictions );\n\t\t\t})\n\n\t\t\t.catch((err)=>{\n\t\t\t\tpredictions.has_error = true;\n\t\t\t\treject({err, predictions});\n\t\t\t})\n\n\t\t})\n\t}\n\n\tfunction setPredictions(predictions){\n\t\tdispatch({\n\t\t\ttype : 'SET_PREDICTIONS',\n\t\t\tpayload: { predictions, }\n\t\t})\n\t}\n\n\tfunction setOffline(bool){\n\t\tdispatch({\n\t\t\ttype: 'SET_OFFILINE',\n\t\t\tpayload: { is_offline: bool, },\n\t\t})\n\t}\n\n\tconst getCountry = (id) =>  state.countries.data.filter( country => country.id === id )[0] || null;\n\n\n\tconst providerValue = {\n\t\t// state\n\t\tis_offline: state.is_offline,\n\t\tcountries: state.countries,\n\t\tpredictions: state.predictions,\n\t\t\n\t\t// set state functions\n\t\tfetchCountries,\n\t\tsetCountries,\n\n\t\tfetchPredictions,\n\t\tsetPredictions,\n\t\tgetCountry,\n\n\t\tsetOffline,\n\t}\n\n\treturn (\n\n\t\t<GlobalContext.Provider value={ providerValue } >\n\t\t\t{ children }\n\t\t</GlobalContext.Provider>\n\t)\n};\n","import React, {Component, createElement} from 'react';\n\nimport './image-styles.css';\n\nclass Image extends Component{\n\n\tstate = {\n\t\tloaded : false,\n\t\terror: false\n\t}\n\t\n\thandleLoad(){\n\t\tthis.setState({ loaded: true })\n\t}\n\thandleError(){\n\t\tthis.setState({  error: true })\n\t\tconsole.log(\"ERROR\")\n\t}\n\n\tcomponentDidMount(){\n\t}\n\n\tLoading( loaded ){\n\t\treturn loaded ? \n\t\t\tnull:\n\t\t\t<small className=\"anim-container\" >Loading ...</small>\n\t}\n\n\trender(){\n\t\tconst { error,  loaded } = this.state;\n\t\tif ( error ){\n\t\t\treturn null\n\t\t}\n\t\treturn(\n\t\t\t<div style={{ height: '100%', width: '100%' }} >\n\t\t\t\t{ this.Loading( loaded ) }\n\t\t\t\t<img style={{ opacity: loaded ? 1:0 }} src={this.props.src} onLoad={ () => this.handleLoad() }  onError={ () => this.handleError() } />\n\t\t\t\t\n\t\t\t</div>\n\t\t)\n\n\t}\n\n}\nexport default Image\n\n","// libraries\nimport React from 'react';\nimport {\n  Link\n} from \"react-router-dom\";\n\nimport Image from './../../utils/components/Image';\nimport homeImage from './../../homeImage.png';\n\n\nfunction Home() {\n  return (\n    \n    <div className=\"home\">\n    \t<div className=\"details\">\n\t    \t<h1 className=\"title\" > Covid-19 Ai Predictions </h1>\n\t    \t<p className=\"paragraph\">Hello visitor, we've took the initiative to create predictions for countries infected. Feel free to take a closer look at  the graphs.\n<br/>Be aware of what we might get ourselves into, if we keep on neglecting the dangers of the current situation.\n<br/>#StaySafe</p>\n\t    \t<div className=\"btns\">\n\t    \t\t<Link to=\"/predictions\" className=\"btn-primary hg\"   >Predictions</Link>\n\t    \t\t<Link to=\"/about\" className=\"btn-outline-primary hg\"   >About us</Link>\n\t    \t</div>\t\n\t    </div>\n\t    <div className=\"image\">\n\t    \t<Image src={homeImage} />\n\t    </div>\n    </div>\n\n  );\n}\n\nexport default Home;","\nexport function formatNumber(number){\n\n\tif ( number < 1000 )\n\t\treturn number\n\t// 1.5M format\n\tif ( number >= 1000000){\n\t\tconst beforeComma = Math.trunc( number / 1000000 );\n\t\tconst afterComma  = Math.trunc((number % 1000000) / 1000);\n\t\t\n\t\treturn afterComma === 0 ? `${beforeComma}M`:`${beforeComma},${afterComma}M`;\n\t}\n\t// 1.5K format\n\tif ( number >= 1000 ){\n\t\tconst beforeComma = Math.trunc( number / 1000 );\n\t\tconst afterComma  = Math.trunc((number % 1000) / 100);\n\n\t\treturn afterComma === 0 ? `${beforeComma}K`:`${beforeComma},${afterComma}K`;\n\t}\n\n}\n\n\nexport function formatNumberToMonth(value){\n\tswitch  ( value ){\n\t\tcase 3: return 'Mars';\n\t\tcase 27: return 'April';\n\t\tcase 58: return  'May';\n\t\tcase 88: return 'June';\n\t\tdefault: return null\n\t}\n}\n\nexport function getTable(predictions){\n\tconst table = [];\n\n\tconst { deaths, cases, recovered } = predictions;\n\tfor (let i=0; i < deaths.length; i++){\n\n\t\tconst month = formatNumberToMonth(i + 1);\n\t\tif ( month  ){\n\t\t\ttable.push({\n\t\t\t\tmonth: month, deaths: deaths[i].y , \n\t\t\t\tcases: cases[i].y, \n\t\t\t\trecovered: recovered[i].y\n\t\t\t})\t\n\t\t}\n\t}\n\n\treturn table;\n}\n\nexport function calcPercent( total, value ){\n\n\tconst calc = Math.trunc( (value / total) * 100 );\n\n\treturn \tcalc\n}","// libraries\nimport React from 'react';\nimport {\n  Link\n} from \"react-router-dom\";\n\n// Utils\nimport  {formatNumber} from './../../utils/utils';\n\n// utils components\nimport Image from './../../utils/components/Image';\n\nfunction countryCard({ id, image, continent, name, population,  deaths, cases }) {\n\n  \n  \n  return (\n    \n    <div className=\"country-card\">\n    \t\n    \t<div className=\"top-bar\">\n    \t\t<div className=\"image\">\n    \t\t\t<Image src={ image.src }  />\n    \t\t</div>\n    \t\t<div className=\"name\" >\n    \t\t\t<h4>{ name }</h4>\n    \t\t\t<small>{continent}</small>\n    \t\t</div>\n    \t</div>\n    \t<div className=\"details\">\n    \t\t\n    \t\t<div className=\"info\">\n    \t\t\t<small>{formatNumber(deaths)}</small>\n    \t\t\t<span>Deaths</span>\n    \t\t</div>\n\n    \t\t<div className=\"info\">\n    \t\t\t<small>{formatNumber(cases)}</small>\n    \t\t\t<span>Infections</span>\n    \t\t</div>\n\n    \t\t<Link to={`/predictions/country/${id}`}  className=\"btn-primary small round \" >See more <i className=\"right fa fa-arrow-right\"/> </Link>\n    \t\t\n    \t</div>\n\n    </div>\n\n  );\n}\n\n//    \t\t<small className=\"info\" > { population }  Population </small>\n\n\n/*\n\nconst deaths_percent = (currently_deaths / population)  * 100 ;\t\n  const infections_percent = (currently_infections / population)  * 100 ;\n  const alives_percent = ( (population - currently_deaths - currently_infections ) / population   ) * 100;\n\n<div className=\"info\">\n    \t\t\t<small className=\"title\" >Deaths: {Math.trunc(deaths_percent)}% - {currently_deaths}  </small>\n    \t\t\t<div  className=\"progress-bar\">\n    \t\t\t\t<span className=\"progress-full\" ></span>\n    \t\t\t\t<span style={{ width: `${deaths_percent}%` }} className=\"progress bg-primary\" ></span>\n    \t\t\t</div>\n    \t\t</div>\n\n    \t\t<div className=\"info\">\n    \t\t\t<small className=\"title\" >Infections: {currently_infections} - {Math.trunc(infections_percent)}%  </small>\n    \t\t\t<div  className=\"progress-bar\">\n    \t\t\t\t<span className=\"progress-full\" ></span>\n    \t\t\t\t<span style={{ width: `${infections_percent}%` }} className=\"progress bg-tomato\" ></span>\n    \t\t\t</div>\n    \t\t</div>\n\n    \t\t<div className=\"info\">\n    \t\t\t<small className=\"title\" >Alives: {population - currently_deaths - currently_infections} - {Math.trunc(alives_percent)}%  </small>\n    \t\t\t<div  className=\"progress-bar\">\n    \t\t\t\t<span className=\"progress-full\" ></span>\n    \t\t\t\t<span style={{ width:  `${alives_percent}%` }} className=\"progress bg-green\" ></span>\n    \t\t\t</div>\n    \t\t</div>\n\nstyles:\n\n.info{\n\t\t\t\t\tposition: relative;\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\twidth: 100%;\n\n\t\t\t\t\t.title{\n\t\t\t\t\t\tposition: relative;\n\t\t\t\t\t\tdisplay: block;\n\t\t\t\t\t\tfont-size: 13px;\n\t\t\t\t\t}\n\t\t\t\t\t.progress-bar{\n\t\t\t\t\t\tposition: relative;\n\t\t\t\t\t\tdisplay: block;\n\t\t\t\t\t\twidth: 100;\n\t\t\t\t\t\tmargin: 10px 0 20px 0;\n\t\t\t\t\t\theight: auto;\n\t\t\t\t\t}\n\t\t\t\t\t.progress-full{\n\t\t\t\t\t\tposition: relative;\n\t\t\t\t\t\tdisplay: block;\n\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\theight: 8px;\n\t\t\t\t\t\tbackground: whitesmoke;\n\t\t\t\t\t\tborder-radius: 25px;\n\t\t\t\t\t}\n\t\t\t\t\t.progress{\n\t\t\t\t\t\tposition: absolute;\n\t\t\t\t\t\tdisplay: block;\n\t\t\t\t\t\ttop: 0;\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\theight: 8px;\n\t\t\t\t\t\t\n\t\t\t\t\t\tborder-radius: 25px;\n\n\t\t\t\t\t\t&.bg-primary{\n\t\t\t\t\t\t\tbackground: $primary-color;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t&.bg-tomato{\n\t\t\t\t\t\t\tbackground: tomato;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t&.bg-green{\n\t\t\t\t\t\t\tbackground: #03fc84;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n*/\n\nexport default countryCard;","// libraries\nimport React, {useContext} from 'react';\nimport {\n  Link\n} from \"react-router-dom\";\n\n// react hooks\nimport { GlobalContext } from './../../state-manager/globalState';\n\n\n// components\nimport CountryCard from './countryCard';\n\nfunction Predictions() {\n\n  const { countries } = useContext( GlobalContext );\n  const { data , has_error } = countries;\n\n\n  if ( has_error )\n    return (\n      <div className=\"countries\">\n        <h1 className=\"title\" > Infected countries </h1>\n        <div className=\"error\">Oops , something went wrong while loading countries !</div>\n      </div>\n    )\n\n  if ( data.length === 0 )\n    return (\n      <div className=\"countries\">\n        <h1 className=\"title\" > Infected countries </h1>\n        <div className=\"error\">Oops , we still have no data to display</div>\n      </div>\n    )\n  \n  return (\n    \n    <div className=\"countries\">\n    \t<h1 className=\"title\" > Infected countries </h1>\n    \t<div className=\"container\">\n    \t\t{\n    \t\t\tdata.map( country => (\n    \t\t\t\t<CountryCard key={ country.id } {...country} />\n    \t\t\t))\n    \t\t}\n    \t</div>\n    </div>\n\n  );\n}\n\nexport default Predictions;","// libraries\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport Chart from 'chart.js';\nimport {\n  Link, useParams, Redirect\n} from \"react-router-dom\";\n\nimport { GlobalContext } from './../../state-manager/globalState';\n\n\nimport {formatNumberToMonth, getTable, calcPercent} from './../../utils/utils';\n \nfunction CountryPredictions() {\n\n\t// Canvas elements for drawing\n \tconst ctxLine = useRef(null);\n \tconst ctxPie = useRef(null);\n\n \t// react hooks \n\tconst { getCountry, predictions, setPredictions, fetchPredictions  } = useContext( GlobalContext );\n \tconst [ isLoading, setIsLoading ] = useState(true);\n \tconst [ country, setCountry ] = useState(null);\n \tconst [ table, setTable ] = useState([\n \t\t{ month: 'Mars',  deaths:0, cases:0, recovered: 0  },\n \t\t{ month: 'April', deaths:0, cases:0, recovered: 0  },\n \t\t{ month: 'May', deaths:0, cases:0, recovered: 0  },\n \t\t{ month: 'June', deaths:0, cases:0, recovered: 0  },\n \t]);\n\n\n\tconst { id } = useParams();\n \t\n\n\tuseEffect( () => {\n\n \t\t// get  The necessary data\n\t\tsetCountry(getCountry(Number(id)));\n \t\tfetchPredictions(id)\n\t\t.then( ( predictions ) =>{\n\t\t\tsetPredictions(predictions);\n\t\t\tsetIsLoading(false);\n\t\t\tsetTable( getTable(predictions) );\n\t\t})\n\t\t.catch( ( { err, predictions} ) =>{\n\t\t\tconsole.log(predictions);\n\t\t\tconsole.log(err);\n\t\t\tsetPredictions(predictions);\n\t\t\tsetIsLoading(false);\n\t\t});\n\n\n \t}, []);\n\n\n \tuseEffect( () => {\n \t\t// start drawing after fetching data\n \t\tif ( ! isLoading && ! predictions.has_error ){\n\t \t\tconst primaryColor = \"rgba(83, 109, 254, .6)\";\n\t \t\tconst secondaryColor = \"tomato\";\n\t \t\tconst greenColor = \"#61D295\";\n\n\n\t \t\t// Draw Line\n\t \t\tlet scatterDataSet;\n\t \t\tif ( predictions.deaths[2].y > 0 ){\n\t\t \t\tscatterDataSet = [\n\t\t \t\t\t {\n\t\t\t\t\t    label: 'Infections',\n\t\t\t\t\t    borderColor: primaryColor ,\n\t\t\t\t\t    color: primaryColor,\n\t\t\t            pointBorderColor: primaryColor,\n\t\t\t            pointBackgroundColor: primaryColor ,\n\t\t\t            fill: true,\n\t\t\t            showLine: true,\n\t\t\t\t\t\tbackgroundColor: primaryColor,\n\t\t\t\t\t    data: predictions.cases,\n\t\t\t\t\t  },{\n\t\t\t\t\t    label: 'Deaths',\n\t\t\t\t\t    borderColor: secondaryColor,\n\t\t\t            pointBorderColor: secondaryColor,\n\t\t\t            pointBackgroundColor: secondaryColor,\n\t\t\t            fill: true,\n\t\t\t            showLine: true,\n\n\t\t\t\t\t\tbackgroundColor: secondaryColor,\n\t\t\t\t\t    data: predictions.deaths,\n\t\t\t\t\t}\n\t\t \t\t];\n\t\t \t}else{\n\t\t \t\tscatterDataSet = [\n\t\t \t\t\t {\n\t\t\t\t\t    label: 'Infections',\n\t\t\t\t\t    borderColor: primaryColor ,\n\t\t\t\t\t    color: primaryColor,\n\t\t\t            pointBorderColor: primaryColor,\n\t\t\t            pointBackgroundColor: primaryColor ,\n\t\t\t            fill: true,\n\t\t\t            showLine: true,\n\t\t\t\t\t\tbackgroundColor: primaryColor,\n\t\t\t\t\t    data: predictions.cases,\n\t\t\t\t\t  }\n\t\t \t\t];\n\t\t \t}\n\t\t\tconst scatterChart = new Chart(ctxLine.current,{\n\t\t\t\t\ttype: 'scatter',\n\t\t\t\t\tdata: {\n\t\t\t\t\t  datasets: scatterDataSet,\n\t\t\t\t\t},\n\t\t\t\t\toptions: {\n\t\t\t\t\t\telements: {\n\t\t                    point:{\n\t\t                        radius: 1,\n\t\t                        // borderDash: [3,],\n\t\t                    }\n\t\t                },\n\t\t\t\t\t\tlegend: {\n\t\t\t            \tlabels: {\n\t\t\t\t                // This more specific font property overrides the global property\n\t\t\t\t                fontColor: 'black',\n\t\t\t\t                fontSize: 14,\n\t\t\t            \t}\n\t\t\t        \t},\n\t\t\t\t\t  responsive: true,\n\t\t\t\t\t  scales: {\n\t\t\t            xAxes: [{\n\t\t\t                gridLines: {\n\t\t\t                    zeroLineColor: \"transparent\"\n\t\t\t\t\t\t\t},\n\t\t\t                ticks: {\n\t\t\t                \tautoSkip: false,\n\t\t\t                \tstepSize: 1,\n\t\t\t        \t\t\tmin:0,\n\t\t\t        \t\t\tmax: 92,\n\t\t\t                    padding: 20,\n\t\t\t                    fontSize: 14,\n\t\t\t                    fontColor: \"rgba(0,0,0,0.5)\",\n\t\t\t                    fontStyle: \"bold\",\n\t\t\t                    callback: ( value ) => formatNumberToMonth(value)\n\t\t\t                }\n\t\t\t            }],\n\t\t\t            yAxes: [{\n\t\t\t                ticks: {\n\t\t\t                    fontColor: \"rgba(0,0,0,0.5)\",\n\t\t\t                    fontStyle: \"bold\",\n\t\t\t                    beginAtZero: true,\n\t\t\t                    // maxTicksLimit: 5,\n\t\t\t                    padding: 20,\n\t\t\t                    callback: ( value ) => value.toLocaleString(),\n\n\t\t\t                },\n\t\t\t                gridLines: {\n\t\t\t                    padding: 20,\n\t\t\t                    zeroLineColor: \"transparent\"\n\n\t\t\t                }\n\t\t\t\t\t\t}],\n\t\t\t\t\t  }\n\t\t\t\t\t}\n\t\t\t   }\n\t\t\t)\n\n\t\t\t\n\t\t\tconst { deaths, cases, recovered } = country;\n\t\t\t// Draw Pie\n\t\t\tconst myPieChart = new Chart(ctxPie.current, {\n\t\t\t    type: 'doughnut',\n\t\t\t    data:{\n\t\t\t\t    datasets: [{\n\t\t\t\t        data: [ deaths, cases,  recovered ],\n\t\t\t\t        fill: true,\n\t            \t\tbackgroundColor: [\n\t\t\t\t            secondaryColor,\n\t\t\t\t            primaryColor,\n\t\t\t\t            greenColor\n\t\t\t            ],\n\t\t\t            \n\t\t\t\t\t }],\n\n\t\t\t\t    // These labels appear in the legend and in the tooltips when hovering different arcs\n\t\t\t\t    labels: [\n\t\t\t\t        'Deaths',\n\t\t\t\t        'Cases',\n\t\t\t\t        'Recovered'\n\t\t\t\t    ]\n\t\t\t\t},\n\t\t\t\toptions: {\n\t\t\t\t\tlegend: {\n\t\t            \tlabels: {\n\t\t\t                // This more specific font property overrides the global property\n\t\t\t                fontColor: 'black',\n\t\t\t                fontSize: 14,\n\t\t            \t}\n\t\t        \t},\n\t\t\t\t\tcutoutPercentage: 50\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n \t}, [isLoading]); \n\n\n\n\n\n \tif ( isLoading )\n\n \t\treturn <div className=\"predictions\"> <div className=\"loading\">Loading ...</div> </div>\n\n \tif ( country && !isLoading ){\n \t\t// necessary data for rendering\n \t\tconst { name, deaths, recovered, cases, population  } = country;\n \t\tconst { has_error } = predictions;\n \t\tif ( predictions.has_error )\n \t\t\treturn (\n \t\t\t   <div className=\"predictions\">\n\t\t\t\t\t<div className=\"top-bar\">\n\t\t\t\t\t\t<Link to=\"/predictions\" className=\"btn-back icon-only\" ><i className=\"fa fa-arrow-left\"/> </Link>\n\t\t\t\t\t\t<h1 className=\"title\" >Predictions of the number of infected cases in {name} ( Mars - June )</h1>\n\t\t\t\t\t</div>\n\t\t        <h1 className=\"title\" > Oops </h1>\n\t\t        <div className=\"error\">something went wrong while loading countries !</div>\n\t\t      </div>\n \t\t\t)\n\n\t\treturn (\n\n\t\t\t<div className=\"predictions\">\n\t\t\t\t<div className=\"top-bar\">\n\t\t\t\t\t<Link to=\"/predictions\" className=\"btn-back icon-only\" ><i className=\"fa fa-arrow-left\"/> </Link>\n\t\t\t\t\t<h1 className=\"title\" >Predictions of the number of infected cases in {name} ( Mars - June )</h1>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"details\">\n\t\t\t\t\t<div className=\"chart-infos\">\n\t\t\t\t\t\t<div className=\"chart\">\n\t\t\t\t\t\t\t<canvas width=\"120%\" height=\"80%\"  ref={ ctxLine } />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"infos\">\n\n\t\t\t    \t\t<h3>Total:  { cases + deaths + recovered } </h3>\n\n\t\t\t    \t\t<canvas width=\"120%\" height=\"100%\"  ref={ ctxPie } />\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"table-4\">\n\n\t\t\t\t\t\t<div className=\"line\">\n\t\t\t\t\t\t\t<span> <small className=\"bold-md\" >Month</small> </span>\n\t\t\t\t\t\t\t<span> <small className=\"bold-md\" >Infections</small> </span>\n\t\t\t\t\t\t\t<span> <small className=\"bold-md\" >Deaths</small> </span>\n\t\t\t\t\t\t\t<span> <small className=\"bold-md\" >Recovered</small> </span>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttable.map( ({month, deaths, recovered, cases}, i) =>(\n\t\t\t\t\t\t\t\t<div key={i} className=\"line\">\n\t\t\t\t\t\t\t\t\t<span> <small className=\"bold-md\" >{month}</small> </span>\n\t\t\t\t\t\t\t\t\t<span> <small>{cases >= 0 ? cases.toLocaleString():0}</small> </span>\n\t\t\t\t\t\t\t\t\t<span> <small>{deaths >= 0 ? deaths.toLocaleString():0}</small> </span>\n\t\t\t\t\t\t\t\t\t<span> <small>{recovered >= 0 ? recovered.toLocaleString():0}</small> </span>\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\t\n\n\t\t\t</div>\n\t\t);\n\t}\n\treturn (\n\t\t<Redirect to=\"/\" />\n\t)\n\n}\n\nexport default CountryPredictions;","// libraries\nimport React from 'react';\n\n// components\nimport Image from './../../utils/components/Image';\n\n\nfunction About() {\n\n\treturn (\n\t\t<div className=\"about\">\n\t\t\t<h1 className=\"title\">About us</h1>\n\t\t\t<p className=\"paragraph\">\n\t\t\tThis is a project dedicated to the current situations and to make people aware of how severe it might get.\n We've used machine learning skills to predict the confirmed cases/deaths in infected countries with Covid-19.\nThe data and predictions will be updated daily according to the newly confirmed cases and deaths.<br/>\n Stay safe everyonen we will get through this together.\n\t\t\t</p>\n\t\t\t<div className=\"developers\">\n\n\t\t\t\t<div className=\"dev-card\">\n\t\t\t\t\t<div className=\"top-bar\">\n\t\t\t\t\t\t<div className=\"image\">\n\t\t\t\t\t\t\t<Image src=\"https://media-exp1.licdn.com/dms/image/C5603AQHEW91Z02rjbw/profile-displayphoto-shrink_200_200/0?e=1590624000&v=beta&t=Xw1TVC-TI_WEaErIUGoCIG7nL5jMrrcEqZkQD5xVVPE\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"name\">\n\t\t\t\t\t\t\t<h3>Seif Gharres</h3>\n\t\t\t\t\t\t\t<small>Web developer / designer</small>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"details\">\n\t\t\t\t\t\t<div className=\"sub-title\" ><small>Who am i ?</small><span></span></div>\n\t\t\t\t\t\t<p className=\"paragraph\">\n\t\t\t\t\t\tI'm a highly motivated web developer / designer who focuses on writing clean, elegant and efficient code. \n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<div className=\"sub-title\" ><small>Skills</small><span></span></div>\n\n\t\t\t\t\t\t<div className=\"skills\">\n\t\t\t\t\t\t\t<small className=\"counted\" >Python ( Django )</small>\n\t\t\t\t\t\t\t<small className=\"counted\" >JavaScript ( ReactJs )</small>\n\t\t\t\t\t\t\t<small className=\"counted\" >Sass, Css, Html</small>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"sub-title\" ><small>contact</small><span></span></div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div className=\"contact\">\n\t\t\t\t\t\t\t<small className=\"counted\"> For Business inquiries</small>\n\t\t\t\t\t\t\t<span className=\"mail\" >seifgharrese.developer@gmail.com</span>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<small className=\"counted\">Follow us on</small>\n\n\t\t\t\t\t\t\t<div className=\"socials\">\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<a target=\"_blank\" href=\"https://www.linkedin.com/in/seif-gharres-977795172/\" className=\"social-icon icon-only fc\" >\n\t\t\t\t\t\t\t\t\t<i className=\"fab fa-linkedin\" />\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t<a href=\"https://www.facebook.com/profile.php?id=100010376260550\" target=\"_blank\" className=\"social-icon icon-only li\" >\n\t\t\t\t\t\t\t\t\t<i className=\"fab fa-facebook-square\" />\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t<a href=\"https://github.com/seifgh\" target=\"_blank\" className=\"social-icon icon-only gi\" >\n\t\t\t\t\t\t\t\t\t<i className=\"fab fa-github-square\" />\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"dev-card\">\n\t\t\t\t\t<div className=\"top-bar\">\n\t\t\t\t\t\t<div className=\"image\">\n\t\t\t\t\t\t\t<Image src=\"https://media-exp1.licdn.com/dms/image/C4D03AQGH1DbWn55Sxw/profile-displayphoto-shrink_200_200/0?e=1590624000&v=beta&t=eeXkxOU23N9M1Zw-HmPQRhGmDVza19b_aw3n71WcIiY\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"name\">\n\t\t\t\t\t\t\t<h3>Ramsis Hammadi</h3>\n\t\t\t\t\t\t\t<small>Data Analyst</small>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"details\">\n\t\t\t\t\t\t<div className=\"sub-title\" ><small>Who am i ?</small><span></span></div>\n\t\t\t\t\t\t<p className=\"paragraph\">\n\t\t\t\t\t\tI'm a machine learning/deep learning enthusiast. I work extensively on Open-cv and Tensorflow.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<div className=\"sub-title\" ><small>Skills</small><span></span></div>\n\t\t\t\t\t\t<div className=\"skills\">\n\t\t\t\t\t\t\t<small className=\"counted\" >Python</small>\n\t\t\t\t\t\t\t<small className=\"counted\" >Machine Learning/Deep learning</small>\n\t\t\t\t\t\t\t<small className=\"counted\" >Data visualization with R</small>\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"sub-title\" ><small>contact</small><span></span></div>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div className=\"contact\">\n\t\t\t\t\t\t\t<small className=\"counted\"> For Business inquiries</small>\n\t\t\t\t\t\t\t<span className=\"mail\" >ramsishammadi@gmail.com</span>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<small className=\"counted\">Follow us on</small>\n\n\t\t\t\t\t\t\t<div className=\"socials\">\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<a target=\"_blank\" href=\"https://www.linkedin.com/in/hammadi-ramsis-799b231a3/\" className=\"social-icon icon-only fc\" >\n\t\t\t\t\t\t\t\t\t<i className=\"fab fa-linkedin\" />\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t<a target=\"_blank\" href=\"https://www.facebook.com/ramsis.benhammadi/\" className=\"social-icon icon-only li\" >\n\t\t\t\t\t\t\t\t\t<i className=\"fab fa-facebook-square\" />\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t<a target=\"_blank\" href=\"https://github.com/Rams901\" className=\"social-icon icon-only gi\" >\n\t\t\t\t\t\t\t\t\t<i className=\"fab fa-github-square\" />\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default About;","// libraries\nimport React from 'react';\n\n// components\nimport Image from './../../utils/components/Image';\n\nimport resourceImage from './../../resourcesImage.png';\n\nfunction Resources() {\n\n\treturn(\n\t\t<div className=\"home\">\n    \t<div className=\"details\">\n\t    \t<h1 className=\"title\" > Our resources</h1>\n\t    \t<p className=\"paragraph\">We've used the publicly-available data from the Coronavirus COVID-19 Global Cases by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University (JHU).</p>\n\t    \t\t\n\t    </div>\n\t    <div className=\"image\">\n\t    \t<Image src={resourceImage} />\n\t    </div>\n    </div>\n\t)\n}\n\n\nexport default Resources;","// libraries\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Route } from \"react-router-dom\";\n\n// react hooks\nimport { GlobalContext } from './../state-manager/globalState';\n\n\n\n// components\nimport Home from './main/Home';\nimport Predictions from './main/Predictions';\nimport CountryPredictions from './main/CountryPredictions';\nimport About from './main/About';\nimport Resources from './main/Resources';\n\n\n\n\n\nfunction Main() {\n\n\t// react hooks\n\tconst { setCountries, fetchCountries, setOffline } = useContext( GlobalContext );\n\tconst [ isLoading, setIsLoading ] = useState(true);\n\n\n\t// fetch the data when the component did mount\n\tuseEffect( () => {\n\t\t\n\t\tfetchCountries()\n\t\t.then( ( countries ) =>{\n\t\t\tsetCountries(countries);\n\t\t\tsetIsLoading(false);\n\t\t})\n\t\t.catch( ( { err, countries} ) =>{\n\t\t\tconsole.log(err);\n\t\t\tconsole.log(countries);\n\t\t\tsetCountries(countries);\n\t\t\tsetIsLoading(false);\n\t\t});\n\n\t\twindow.addEventListener('offline',  setOffline(true) );\n     \twindow.addEventListener('online', setOffline(false) );\n\n\t},[]);\n\n\tif ( isLoading )\n\t\treturn <main> <div className=\"loading\">Loading ...</div> </main>\n\n\treturn (\n\t\t<main className=\"\" >\n\t\t\t<Route exact path=\"/\" component={Home} />\n\t\t\t<Route exact path=\"/predictions\" component={Predictions} />\n\t\t\t<Route exact path=\"/predictions/country/:id\" component={CountryPredictions} />\n\t\t\t\n\t\t\t<Route exact path=\"/about\" component={About} />\n\t\t\t<Route exact path=\"/resources\" component={Resources} />\n\t\t\t\n\t\t</main>\n\t);\n}\n\n\nexport default Main;\n","// libraries\nimport React, { useState, useEffects } from 'react';\nimport {\n  Link,\n  NavLink\n} from \"react-router-dom\";\n\n\nfunction Aside() {\n  // responsivity\n  const [ displayMenu, setDisplayMenu ] = useState(false);\n\n  return (\n    \n    <aside className=\"\">\n      <div className=\"top-bar\">\n      \t<Link to=\"/\" className=\"logo\">\n      \t\t<h1>COVID-19</h1>\n      \t\t<div>\n      \t\t\t<h3>AI predictions</h3>\n      \t\t</div>\n      \t</Link>\n\n        <div onClick={ () => setDisplayMenu(!displayMenu) } className={`icon-menu${displayMenu ? ' active':''}`}><i className=\"fa fa-stream\"  /></div>\n       \n      </div>\n    \t<div className={`links${displayMenu ? ' show':''}`}>\n    \t\t<NavLink onClick={ () => setDisplayMenu(!displayMenu) }  activeClassName=\"link active\" className=\"link\" exact to=\"/\" > <i className=\"fas fa-home\"/> Home</NavLink>\n    \t\t<NavLink onClick={ () => setDisplayMenu(!displayMenu) }  activeClassName=\"link active\" className=\"link\" to=\"/predictions\" > <i className=\"fa fa-chart-line\"/> Predictions</NavLink>\n    \t\t<NavLink onClick={ () => setDisplayMenu(!displayMenu) }  activeClassName=\"link active\" className=\"link\" to=\"/about\" > <i className=\"fa fa-question\"/> About us</NavLink>\n        <NavLink onClick={ () => setDisplayMenu(!displayMenu) }  activeClassName=\"link active\" className=\"link\" to=\"/resources\" > <i className=\"fa fa-info\"/> Resources</NavLink>\n    \t   \n      </div>\n    </aside>\n\n  );\n}\n\n//<h3>AI</h3> <h3>predictions</h3>\n\n\nexport default Aside;\n","// libraries\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n// react hooks (state management  )\n\nimport { GlobalProvider } from './state-manager/globalState';\n\n\n// styles\nimport './App.css';\nimport './Responsive.css';\nimport './fontawesome/css/all.css';\n\n\n\n// components\nimport Main  from './components/Main';\nimport Aside  from './components/Aside'; \n\n\n\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <div className=\"App\">\n        <Router>\n            <Aside />\n            <Main />\n        </Router>\n        <small className=\"cpr\" >Copyright © 2020 Covid-19 Ai predictions TN. All Rights Reserved.</small>\n        <div className=\"hash\">\n          <h4>#stayAtHome</h4>\n          <h4>#staySafe</h4>\n        </div>\n      </div>\n    </GlobalProvider>\n  );\n}\n\n        // <Footer />\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}